[build-system]
requires = ["hatchling>=1.18"]
build-backend = "hatchling.build"

[project]
name = "ai_power_recommendation_engine"
version = "0.1.0"
description = "Production-grade AI-powered recommendation engine with FastAPI and hybrid ML stack"
readme = "README.md"
authors = [
  {name = "AI Codex", email = "dev@example.com"}
]
requires-python = "~=3.12"
dependencies = [
  "fastapi==0.110.1",
  "uvicorn[standard]==0.27.1",
  "jinja2==3.1.3",
  "itsdangerous==2.1.2",
  "python-multipart==0.0.9",
  "pydantic==2.6.4",
  "pydantic-settings==2.2.1",
  "sqlalchemy[asyncio]==2.0.29",
  "alembic==1.13.1",
  "asyncpg==0.29.0",
  "psycopg[binary]==3.1.18",
  "redis[hiredis]==5.0.3",
  "celery[redis]==5.3.6",
  "structlog==24.1.0",
  "python-json-logger==2.0.7",
  "passlib[bcrypt]==1.7.4",
  "python-jose[cryptography]==3.3.0",
  "httpx==0.27.0",
  "aiosmtplib==2.0.2",
  "prometheus-client==0.20.0",
  "opentelemetry-sdk==1.23.0",
  "opentelemetry-exporter-otlp==1.23.0",
  "opentelemetry-instrumentation-fastapi==0.44b0",
  "orjson==3.9.15",
  "numpy==1.26.4",
  "pandas==2.2.1",
  "scikit-learn==1.4.1.post1",
  "scipy==1.12.0",
  "lightgbm==4.3.0",
  "xgboost==2.0.3",
  "implicit==0.7.2",
  "matplotlib==3.8.3",
  "seaborn==0.13.2",
  "plotly==5.19.0",
  "tenacity==8.2.3",
  "pyjwt[crypto]==2.8.0",
  "pyyaml==6.0.1",
  "faker==24.3.0",
  "rich==13.7.1"
]

[project.optional-dependencies]
dev = [
  "pytest==8.1.1",
  "pytest-asyncio==0.23.5",
  "pytest-cov==4.1.0",
  "mypy==1.8.0",
  "ruff==0.3.0",
  "black==24.2.0",
  "types-redis==4.6.0.20240218",
  "types-requests==2.31.0.20240218"
]

[project.urls]
Homepage = "https://example.com"
Documentation = "https://example.com/docs"

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.ruff]
line-length = 100
target-version = "py312"
select = ["E", "F", "I", "B", "UP", "S", "W", "C4", "RUF"]
ignore = ["S101", "B008"]
exclude = ["alembic/versions"]

[tool.ruff.lint.isort]
known-first-party = ["app", "ml", "scripts", "tests"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q --cov=app --cov=ml --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.12"
plugins = ["pydantic.mypy"]
ignore_missing_imports = true
strict = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
show_error_codes = true
namespace_packages = true
mypy_path = ["./"]

[tool.coverage.report]
omit = ["tests/*", "alembic/*", "ml/notebooks/*"]
show_missing = true

